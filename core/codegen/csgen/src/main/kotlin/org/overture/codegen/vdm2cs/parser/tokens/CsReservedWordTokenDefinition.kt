package org.overture.codegen.vdm2cs.parser.tokens

import me.sargunvohra.lib.cakeparse.api.token
import org.overture.codegen.vdm2cs.utilities.toUpperCamelCase

enum class CsReservedWordTokenDefinition(override val pattern: String) : CsTokenDefinition
{
    ABSTRACT("abstract"),
    ADD("add"),
    ALIAS("alias"),
    ASCENDING("ascending"),
    ASYNC("async"),
    AS("as"),
    AWAIT("await"),
    BASE("base"),
    BOOL("bool"),
    BREAK("break"),
    BYTE("byte"),
    BY("by"),
    CASE("case"),
    CATCH("catch"),
    CHAR("char"),
    CHECKED("checked"),
    CLASS("class"),
    CONST("const"),
    CONTINUE("continue"),
    DECIMAL("decimal"),
    DEFAULT("default"),
    DEFINE("#define"),
    DELEGATE("delegate"),
    DESCENDING("descending"),
    DOUBLE("double"),
    DO("do"),
    DYNAMIC("dynamic"),
    ELSE("else"),
    ENUM("enum"),
    EQUALS("equals"),
    EVENT("event"),
    EXPLICIT("explicit"),
    EXTERN("extern"),
    FALSE("false"),
    FINALLY("finally"),
    FIXED("fixed"),
    FLOAT("float"),
    FOREACH("foreach"),
    FOR("for"),
    FROM("from"),
    GET("get"),
    GLOBAL("global"),
    GOTO("goto"),
    GROUP("group"),
    IF("if"),
    IMPLICIT("implicit"),
    INTERFACE("interface"),
    INTERNAL("internal"),
    INTO("into"),
    INT("int"),
    IN("in"),
    IS("is"),
    JOIN("join"),
    LET("let"),
    LOCK("lock"),
    LONG("long"),
    NAMEOF("nameof"),
    NAMESPACE("namespace"),
    NEW("new"),
    NULL("null"),
    OBJECT("object"),
    ON("on"),
    OPERATOR("operator"),
    ORDERBY("orderby"),
    OUT("out"),
    OVERRIDE("override"),
    PARAMS("params"),
    PARTIAL("partial"),
    PRIVATE("private"),
    PROTECTED("protected"),
    PUBLIC("public"),
    READONLY("readonly"),
    REF("ref"),
    REMOVE("remove"),
    RETURN("return"),
    SBYTE("sbyte"),
    SEALED("sealed"),
    SELECT("select"),
    SET("set"),
    SHORT("short"),
    SIZEOF("sizeof"),
    STACKALLOC("stackalloc"),
    STATIC("static"),
    STRING("string"),
    STRUCT("struct"),
    SWITCH("switch"),
    THIS("this"),
    THROW("throw"),
    TRUE("true"),
    TRY("try"),
    TYPEOF("typeof"),
    UINT("uint"),
    ULONG("ulong"),
    UNCHECKED("unchecked"),
    UNSAFE("unsafe"),
    USHORT("ushort"),
    USING("using"),
    VALUE("value"),
    VAR("var"),
    VIRTUAL("virtual"),
    VOID("void"),
    VOLATILE("volatile"),
    WHEN("when"),
    WHERE("where"),
    WHILE("while"),
    YIELD("yield");

    override val token = token(name.toUpperCamelCase(), pattern)

    companion object
    {
        val tokenDefinitions: List<CsTokenDefinition>
            get() = values().toList()
    }
}
